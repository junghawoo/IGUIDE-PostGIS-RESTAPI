apiVersion: apps/v1
kind: Deployment
metadata:
  name: geoapi
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.geoapi.replicas }}
  selector:
    matchLabels:
      app: geoapi
  template:
    metadata:
      labels:
        app: geoapi
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default "pg-secret" .Values.postgres.existingSecret }}
                  key: POSTGRES_PASSWORD
            - name: DB_NAME_LARGEST
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: POSTGRES_DB
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
{{ toYaml .Values.geoapi.resources | indent 12 }}
